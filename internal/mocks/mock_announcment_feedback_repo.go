// Code generated by MockGen. DO NOT EDIT.
// Source: gafroshka-main/internal/announcmentFeedback (interfaces: FeedbackRepo)

package mocks

import (
	annfbtype "gafroshka-main/internal/types/announcmentFeedback"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockFeedbackRepo is a mock of FeedbackRepo interface.
type MockFeedbackRepo struct {
	ctrl     *gomock.Controller
	recorder *MockFeedbackRepoMockRecorder
}

// MockFeedbackRepoMockRecorder is the mock recorder for MockFeedbackRepo.
type MockFeedbackRepoMockRecorder struct {
	mock *MockFeedbackRepo
}

// NewMockFeedbackRepo creates a new mock instance.
func NewMockFeedbackRepo(ctrl *gomock.Controller) *MockFeedbackRepo {
	mock := &MockFeedbackRepo{ctrl: ctrl}
	mock.recorder = &MockFeedbackRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFeedbackRepo) EXPECT() *MockFeedbackRepoMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockFeedbackRepo) Create(feedback annfbtype.Feedback) (annfbtype.Feedback, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", feedback)
	ret0, _ := ret[0].(annfbtype.Feedback)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockFeedbackRepoMockRecorder) Create(feedback interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockFeedbackRepo)(nil).Create), feedback)
}

// Delete mocks base method.
func (m *MockFeedbackRepo) Delete(id string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", id)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockFeedbackRepoMockRecorder) Delete(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockFeedbackRepo)(nil).Delete), id)
}

// GetByAnnouncementID mocks base method.
func (m *MockFeedbackRepo) GetByAnnouncementID(announcementID string) ([]annfbtype.Feedback, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByAnnouncementID", announcementID)
	ret0, _ := ret[0].([]annfbtype.Feedback)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByAnnouncementID indicates an expected call of GetByAnnouncementID.
func (mr *MockFeedbackRepoMockRecorder) GetByAnnouncementID(announcementID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByAnnouncementID", reflect.TypeOf((*MockFeedbackRepo)(nil).GetByAnnouncementID), announcementID)
}